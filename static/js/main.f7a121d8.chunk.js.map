{"version":3,"sources":["Store.js","components/Layout.js","components/BaseElements.js","screens/Dictionaries.js","screens/Dictionary.js","App.js","serviceWorker.js","index.js"],"names":["DICTIONARIES","STATUS","EMPTY","OK","DUPLICATE","FORK","CYCLE","CHAIN","NEW","compareLowerCase","str1","str2","toLowerCase","updateConsistency","arr","map","item","consistent","rows","every","r","rowStatus","length","updateRowsStatus","row","_","computeRowStatus","find","rowId","domain","range","isThisACycle","loop","i","Context","React","createContext","Store","children","useState","dictionaries","setDictionaries","dictionary","setDictionary","useEffect","data","localStorage","getItem","parsedData","JSON","parse","e","console","warn","setItem","stringify","Provider","value","dictionariesNew","name","newDictionary","id","uuid","dictionariesDelete","filter","d","dictionarySet","dictionaryUnset","dictionaryRowsNew","Error","newRow","updatedDictionary","updatedDictionariesWithUpdatedRowsAndConsistency","dictionaryRowsDelete","dictionaryRowsEdit","useStore","useContext","Header","styled","header","H1","h1","Main","main","Layout","Input","input","Ul","ul","Button","button","DeleteButton","Section","section","Breadcrumbs","div","Item","onDelete","handleDelete","useCallback","waringTitle","join","Li","Name","as","Link","to","Warning","role","aria-label","title","onClick","li","span","NewDictionary","onNew","setName","handleNameChange","currentTarget","handleSubmit","ev","preventDefault","trim","Form","onSubmit","placeholder","required","onChange","form","Dictionaries","onEdit","useDictionaries","key","handleDomainChange","handleRangeChange","Label","Type","Field","Status","NewRow","setDomain","setRange","type","Dictionary","useParams","handleNewRow","handleDeleteRow","handleEditRow","onNewRow","onDeleteRow","onEditRow","useDictionary","index","PUBLIC_URL","process","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7a121d8.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport uuid from 'uuid/v4'\n\nconst DICTIONARIES = 'dictionaries'\nconst STATUS = {\n  EMPTY: 'empty',\n  OK: 'ok',\n  DUPLICATE: 'duplicate',\n  FORK: 'fork',\n  CYCLE: 'cycle',\n  CHAIN: 'chain',\n  NEW: 'new',\n}\n\nfunction compareLowerCase(str1, str2) {\n  return str1.toLowerCase() === str2.toLowerCase()\n}\n\nfunction isThisACycle(item, arr) {\n  const loop = arr.find(i => compareLowerCase(item.range, i.domain))\n  if (!loop) {\n    return false\n  }\n  if (compareLowerCase(loop.range, item.domain)) {\n    return true\n  }\n  return isThisACycle(loop, arr)\n}\n\nfunction updateConsistency(arr) {\n  return arr.map(item => ({\n    ...item,\n    consistent: item.rows.every(r => r.rowStatus === STATUS.OK) && item.rows.length,\n  }))\n}\n\nfunction updateRowsStatus(arr) {\n  return arr.map(item => ({\n    ...item,\n    rows: item.rows.map((row, _, rows) => ({\n      ...row,\n      rowStatus: computeRowStatus(row, rows),\n    })),\n  }))\n}\n\nfunction computeRowStatus(row, rows) {\n  // this is the only item\n  if (rows.length === 1) {\n    return STATUS.OK\n  }\n  // duplicate\n  if (\n    rows.find(\n      r =>\n        r.rowId !== row.rowId &&\n        compareLowerCase(r.domain, row.domain) &&\n        compareLowerCase(r.range, row.range),\n    )\n  ) {\n    return STATUS.DUPLICATE\n  }\n  // fork\n  if (\n    rows.find(\n      r => r.rowId !== row.rowId && compareLowerCase(r.domain, row.domain),\n    )\n  ) {\n    return STATUS.FORK\n  }\n  // cycle\n  if (isThisACycle(row, rows)) {\n    return STATUS.CYCLE\n  }\n  // chain\n  if (rows.find(r => compareLowerCase(row.range, r.domain))) {\n    return STATUS.CHAIN\n  }\n  // ok\n  return STATUS.OK\n}\n\nconst Context = React.createContext()\n\nfunction Store({ children }) {\n  const [dictionaries, setDictionaries] = useState([])\n  const [dictionary, setDictionary] = useState(null)\n\n  const dictionariesNew = name => {\n    const newDictionary = {\n      id: uuid(),\n      name,\n      consistent: false,\n      rows: [],\n    }\n    setDictionaries([...dictionaries, newDictionary])\n  }\n\n  const dictionariesDelete = id => {\n    setDictionaries(dictionaries.filter(d => d.id !== id))\n  }\n\n  const dictionarySet = id => {\n    const item = dictionaries.find(d => d.id === id)\n    if (!item) {\n      return\n    }\n    setDictionary(item)\n  }\n\n  const dictionaryUnset = () => {\n    setDictionary(null)\n  }\n\n  const dictionaryRowsNew = (id, row) => {\n    if (!dictionary) {\n      throw new Error('A dictionary has not been selected')\n    }\n\n    const rowId = uuid()\n    const rowStatus = STATUS.NEW\n    const newRow = { ...row, rowId, rowStatus }\n    const updatedDictionary = {\n      ...dictionary,\n      rows: [...dictionary.rows, newRow],\n    }\n    const updatedDictionaries = dictionaries.map(\n      d => (d.id === id ? updatedDictionary : d),\n    )\n    const updatedDictionariesWithUpdatedRows = updateRowsStatus(\n      updatedDictionaries,\n    )\n    const updatedDictionariesWithUpdatedRowsAndConsistency = updateConsistency(\n      updatedDictionariesWithUpdatedRows,\n    )\n    setDictionaries(updatedDictionariesWithUpdatedRowsAndConsistency)\n\n    // side effect: update current\n    setDictionary(updatedDictionary)\n  }\n\n  const dictionaryRowsDelete = (id, rowId) => {\n    if (!dictionary) {\n      throw new Error('A dictionary has not been selected')\n    }\n\n    const updatedDictionary = {\n      ...dictionary,\n      rows: [...dictionary.rows.filter(r => r.rowId !== rowId)],\n    }\n    const updatedDictionaries = dictionaries.map(\n      d => (d.id === id ? updatedDictionary : d),\n    )\n    const updatedDictionariesWithUpdatedRows = updateRowsStatus(\n      updatedDictionaries,\n    )\n    const updatedDictionariesWithUpdatedRowsAndConsistency = updateConsistency(\n      updatedDictionariesWithUpdatedRows,\n    )\n    setDictionaries(updatedDictionariesWithUpdatedRowsAndConsistency)\n\n    // side effect: update current\n    setDictionary(updatedDictionary)\n  }\n\n  const dictionaryRowsEdit = (id, rowId, row) => {\n    if (!dictionary) {\n      throw new Error('A dictionary has not been selected')\n    }\n\n    const updatedDictionary = {\n      ...dictionary,\n      rows: [\n        ...dictionary.rows.map(r => (r.rowId !== rowId ? r : { ...r, ...row })),\n      ],\n    }\n    const updatedDictionaries = dictionaries.map(\n      d => (d.id === id ? updatedDictionary : d),\n    )\n    const updatedDictionariesWithUpdatedRows = updateRowsStatus(\n      updatedDictionaries,\n    )\n    const updatedDictionariesWithUpdatedRowsAndConsistency = updateConsistency(\n      updatedDictionariesWithUpdatedRows,\n    )\n    setDictionaries(updatedDictionariesWithUpdatedRowsAndConsistency)\n\n    // side effect: update current\n    setDictionary(updatedDictionary)\n  }\n\n  // one time: load local storage data\n  useEffect(() => {\n    const data = localStorage.getItem(DICTIONARIES)\n    try {\n      if (data) {\n        const parsedData = JSON.parse(data) || []\n        if (!parsedData.length) {\n          return\n        }\n        setDictionaries(parsedData)\n      }\n    } catch (e) {\n      console.warn(\n        'There was an error reading/parsing the data from local storage',\n      )\n    }\n  }, [])\n\n  // when dictionaries changes persist data to local storage\n  useEffect(\n    () => {\n      localStorage.setItem(DICTIONARIES, JSON.stringify(dictionaries))\n    },\n    [dictionaries],\n  )\n\n  return (\n    <Context.Provider\n      value={{\n        dictionary,\n        dictionaries,\n        dictionariesNew,\n        dictionariesDelete,\n        dictionarySet,\n        dictionaryUnset,\n        dictionaryRowsNew,\n        dictionaryRowsDelete,\n        dictionaryRowsEdit,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\n\nfunction useStore() {\n  return useContext(Context)\n}\n\nexport { useStore, Store, STATUS }\n","import React from 'react'\nimport styled from 'styled-components'\n\nfunction Layout({ children }) {\n  return (\n    <>\n      <Header>\n        <H1>Dictionary CRUD</H1>\n      </Header>\n      <Main>{children}</Main>\n    </>\n  )\n}\n\nconst Header = styled.header`\n  position: sticky;\n  top: 0;\n  background: #877392;\n  box-shadow: 0 -2px 5px 0px #877392;\n  padding: 12px;\n`\n\nconst H1 = styled.h1`\n  margin: 0;\n  color: white;\n`\n\nconst Main = styled.main`\n  padding: 16px 0;\n\n  @media (min-width: 640px) {\n    padding: 32px;\n  }\n`\n\nexport default Layout\n","import styled from 'styled-components'\n\nconst Input = styled.input`\n  padding: 8px;\n  font-size: 14px;\n  min-width: 50px;\n`\n\nconst Ul = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  & li:nth-child(2n + 1) {\n    background: #fafafa;\n  }\n\n  @media (min-width: 640px) {\n    border: 1px solid #eee;\n  }\n`\n\nconst Button = styled.button`\n  border-radius: 4px;\n  padding: 8px\n  border: 1px solid #45b748;\n  color: #45b748;\n  background: white;\n  cursor: pointer;\n  font-size: 14px;\n`\n\nconst DeleteButton = styled(Button)`\n  font-size: 12px;\n  height: 40px;\n  color: white;\n  border: 1px solid rgba(167, 40, 40, 0.4);\n  color: rgba(167, 40, 40, 0.6);\n  background: white;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Section = styled.section`\n  display: grid;\n  grid-gap: 16px;\n`\n\nconst Breadcrumbs = styled.div`\n  padding-left: 8px;\n  font-weight: bold;\n  word-break: break-all;\n\n  @media (min-width: 640px) {\n    padding-left: 0;\n  }\n`\n\nexport { Ul, Input, Button, DeleteButton, Section, Breadcrumbs }\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { useStore } from '../Store'\nimport {\n  Button,\n  Breadcrumbs,\n  DeleteButton,\n  Input,\n  Section,\n  Ul,\n} from '../components/BaseElements'\n\nfunction useDictionaries() {\n  const { dictionaries, dictionariesNew, dictionariesDelete } = useStore()\n  const onEdit = () => null\n  return {\n    dictionaries,\n    onNew: dictionariesNew,\n    onDelete: dictionariesDelete,\n    onEdit,\n  }\n}\n\nfunction Dictionaries() {\n  const { dictionaries, onNew, onDelete, onEdit } = useDictionaries()\n\n  return (\n    <Section>\n      <Breadcrumbs>Dictionaries</Breadcrumbs>\n      <NewDictionary onNew={onNew} />\n      {!!dictionaries.length && (\n        <Ul>\n          {dictionaries.map(item => (\n            <Item key={item.id} {...item} onDelete={onDelete} onEdit={onEdit} />\n          ))}\n        </Ul>\n      )}\n    </Section>\n  )\n}\n\nfunction Item({ id, name, rows, consistent, onDelete }) {\n  const handleDelete = useCallback(() => onDelete(id), [id, onDelete])\n  const waringTitle = !rows.length\n    ? 'Empty'\n    : rows.map(({ rowStatus }) => rowStatus).join(', ')\n\n  return (\n    <Li consistent={consistent}>\n      <Name as={Link} to={`/${id}`}>\n        {name}\n      </Name>\n      {!consistent && (\n        <Warning>\n          <span role=\"img\" aria-label=\"warning\" title={waringTitle}>\n            ⚠️\n          </span>\n        </Warning>\n      )}\n      <DeleteButton onClick={handleDelete}>Delete</DeleteButton>\n    </Li>\n  )\n}\n\nconst Li = styled.li`\n  display: grid;\n  grid-template-columns: ${({ consistent }) =>\n    consistent ? '1fr auto' : '1fr auto auto'};\n  grid-gap: 8px;\n  align-items: center;\n  padding: 0 8px;\n`\n\nconst Name = styled.div`\n  padding: 24px 0;\n  padding-left: 8px;\n  word-break: break-all;\n\n  @media (min-width: 640px) {\n    padding-left: 0;\n  }\n`\n\nconst Warning = styled.span`\n  height: 40px;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n`\n\nfunction NewDictionary({ onNew }) {\n  const [name, setName] = useState('')\n  const handleNameChange = useCallback(\n    ({ currentTarget: { value } }) => {\n      setName(value)\n    },\n    [setName],\n  )\n  const handleSubmit = useCallback(\n    ev => {\n      ev.preventDefault()\n      if (!name.trim()) {\n        return\n      }\n      onNew(name)\n      setName('')\n    },\n    [name, onNew],\n  )\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"New dictionary name\"\n        required\n        value={name}\n        onChange={handleNameChange}\n      />\n      <Button>Add</Button>\n    </Form>\n  )\n}\n\nconst Form = styled.form`\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  grid-gap: 16px;\n  padding: 8px;\n\n  @media (min-width: 640px) {\n    padding: 0;\n  }\n`\n\nexport default Dictionaries\n","import React, { useCallback, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useParams, Link } from 'react-router-dom'\nimport { useStore, STATUS } from '../Store'\nimport {\n  Button,\n  Breadcrumbs,\n  DeleteButton,\n  Input,\n  Section,\n  Ul,\n} from '../components/BaseElements'\n\nfunction useDictionary() {\n  const { id } = useParams()\n  const {\n    dictionaries,\n    dictionary,\n    dictionarySet,\n    dictionaryUnset,\n    dictionaryRowsNew,\n    dictionaryRowsDelete,\n    dictionaryRowsEdit,\n  } = useStore()\n  const handleNewRow = useCallback(row => dictionaryRowsNew(id, row), [\n    dictionaryRowsNew,\n    id,\n  ])\n  const handleDeleteRow = useCallback(\n    rowId => dictionaryRowsDelete(id, rowId),\n    [dictionaryRowsDelete, id],\n  )\n  const handleEditRow = useCallback(\n    (rowId, row) => dictionaryRowsEdit(id, rowId, row),\n    [dictionaryRowsEdit, id],\n  )\n\n  useEffect(\n    () => {\n      dictionarySet(id)\n    },\n    [id, dictionarySet, dictionaries],\n  )\n\n  // unmount\n  useEffect(() => () => dictionaryUnset(), [dictionaryUnset])\n\n  return {\n    dictionary,\n    onNewRow: handleNewRow,\n    onDeleteRow: handleDeleteRow,\n    onEditRow: handleEditRow,\n  }\n}\n\nfunction Dictionary() {\n  const { dictionary, onNewRow, onDeleteRow, onEditRow } = useDictionary()\n\n  if (!dictionary) {\n    return (\n      <Section>\n        <Breadcrumbs>\n          <Link to=\"/\">Dictionaries</Link>\n        </Breadcrumbs>\n        <p>Dictionary does not exist</p>\n      </Section>\n    )\n  }\n  const { name, rows } = dictionary\n\n  return (\n    <Section>\n      <Breadcrumbs>\n        <Link to=\"/\">Dictionaries</Link> / <span>{name}</span>\n      </Breadcrumbs>\n      <NewRow onNew={onNewRow} />\n      {!!rows.length && (\n        <Ul>\n          {rows.map((item, index) => (\n            <Item\n              key={index}\n              {...item}\n              onEdit={onEditRow}\n              onDelete={onDeleteRow}\n            />\n          ))}\n        </Ul>\n      )}\n    </Section>\n  )\n}\n\nfunction Item({ onEdit, onDelete, domain, range, rowId, rowStatus }) {\n  const handleDomainChange = useCallback(\n    ({ currentTarget: { value } }) => {\n      onEdit(rowId, { domain: value, range })\n    },\n    [range, onEdit, rowId],\n  )\n  const handleRangeChange = useCallback(\n    ({ currentTarget: { value } }) => {\n      onEdit(rowId, { domain, range: value })\n    },\n    [domain, onEdit, rowId],\n  )\n  const handleDelete = useCallback(\n    () => {\n      onDelete(rowId)\n    },\n    [onDelete, rowId],\n  )\n\n  return (\n    <Li>\n      <Label>\n        <Type>Domain</Type>\n        <Field value={domain} onChange={handleDomainChange} />\n      </Label>\n      <Label>\n        <Type>Range</Type>\n        <Field value={range} onChange={handleRangeChange} />\n      </Label>\n      <Status>\n        {rowStatus === STATUS.OK ? (\n          <span role=\"img\" aria-label=\"Ok\" title=\"Ok\">\n            👌\n          </span>\n        ) : rowStatus === STATUS.DUPLICATE ? (\n          <span role=\"img\" aria-label=\"Duplicate\" title=\"Duplicate\">\n            ✌️\n          </span>\n        ) : rowStatus === STATUS.FORK ? (\n          <span role=\"img\" aria-label=\"Fork\" title=\"Fork\">\n            🍴\n          </span>\n        ) : rowStatus === STATUS.CYCLE ? (\n          <span role=\"img\" aria-label=\"Cycle\" title=\"Cycle\">\n            ➿\n          </span>\n        ) : rowStatus === STATUS.CHAIN ? (\n          <span role=\"img\" aria-label=\"Chain\" title=\"Chain\">\n            🔗\n          </span>\n        ) : (\n          <span>a</span>\n        )}\n      </Status>\n      <div>\n        <DeleteButton onClick={handleDelete}>Delete</DeleteButton>\n      </div>\n    </Li>\n  )\n}\nconst Li = styled.li`\n  display: grid;\n  grid-template-columns: 1fr 1fr auto auto;\n  grid-gap: 8px;\n  align-items: center;\n  padding: 8px;\n`\nconst Label = styled.div`\n  display: grid;\n  grid-template-rows: auto 1fr;\n`\nconst Field = styled(Input)`\n  border: none;\n  border-bottom: 1px solid #ccc;\n  padding: 4px;\n  min-width: 50px;\n`\nconst Type = styled.div`\n  font-size: 12px;\n  color: #777;\n  margin-bottom: 4px;\n`\nconst Status = styled.div`\n  height: 40px;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n`\nfunction NewRow({ onNew }) {\n  const [domain, setDomain] = useState('')\n  const [range, setRange] = useState('')\n  const handleDomainChange = useCallback(({ currentTarget: { value } }) => {\n    setDomain(value)\n  }, [])\n  const handleRangeChange = useCallback(({ currentTarget: { value } }) => {\n    setRange(value)\n  }, [])\n  const handleSubmit = useCallback(\n    ev => {\n      ev.preventDefault()\n      if (!domain.trim() && !range.trim()) {\n        return\n      }\n      onNew({ domain, range })\n      setDomain('')\n      setRange('')\n    },\n    [domain, range, onNew],\n  )\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Domain\"\n        required\n        value={domain}\n        onChange={handleDomainChange}\n      />\n      <Input\n        placeholder=\"Range\"\n        required\n        value={range}\n        onChange={handleRangeChange}\n      />\n      <Button type=\"submit\">Add</Button>\n    </Form>\n  )\n}\nconst Form = styled.form`\n  display: grid;\n  grid-template-columns: 1fr 1fr max-content;\n  grid-gap: 16px;\n  padding: 4px;\n\n  @media (min-width: 640px) {\n    padding: 0;\n  }\n`\nexport default Dictionary\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Store } from './Store'\nimport Layout from './components/Layout'\nimport Dictionaries from './screens/Dictionaries'\nimport Dictionary from './screens/Dictionary'\n\nconst { PUBLIC_URL = '' } = process.env\n\nfunction App() {\n  return (\n    <Store>\n      <Layout>\n        <Router basename={'/dictionaries'}>\n          <Switch>\n            <Route exact path={`${PUBLIC_URL}/:id`} component={Dictionary} />\n            <Route path={`${PUBLIC_URL}/`} component={Dictionaries} />\n          </Switch>\n        </Router>\n      </Layout>\n    </Store>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}